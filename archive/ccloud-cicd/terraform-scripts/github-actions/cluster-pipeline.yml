name: Terraform Create Confluent Cloud Clusters

on:
  push:
    branches:
      - main

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

     - name: install nodejs
       run: |
         sudo apt update
         sudo apt install nodejs
         # sudo ln -s /usr/bin/nodejs /usr/local/bin/node

      - name: Terraform Init
        env:
          ARM_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_ACCESS_KEY }}
          ARM_STORAGE_ACCOUNT: <your-Azure-Storage-Account-Name>
          ARM_STORAGE_CONTAINER: <your-Azure-Storage-Container-Name>
          ARM_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_ACCESS_KEY }}
          ARM_STORAGE_SAS_TOKEN: ""
        working-directory: terraform-scripts/kafka-clusters
        run: |
          terraform init \
            -backend-config="key=<your-blob-name>" \
            -backend-config="resource_group_name=<your-resource-group>" \
            -backend-config="storage_account_name=<your-Azure-Storage-Account-Name>" \
            -backend-config="container_name=<your-Azure-Storage-Container-Name>" \
            -backend-config="access_key=$ARM_ACCESS_KEY" \
            -backend-config="sas_token=$ARM_STORAGE_SAS_TOKEN"


      - name: Setup Terraform variables
        working-directory: terraform-scripts/kafka-clusters
        id: vars
        run: |-
          cat > dev.terraform.tfvars <<EOF
          confluent_cloud_api_key = "${{ secrets.CONFLUENT_CLOUD_API_KEY }}"
          confluent_cloud_api_key = "${{ secrets.CONFLUENT_CLOUD_API_SECRET }}"
          env_confluentPS_id = "env-xxxxx"
          EOF

      - name: Terraform Apply
        working-directory: terraform-scripts/kafka-clusters
        run: terraform apply -auto-approve -var-file=dev.terraform.tfvars

      - name: Terraform Show
        working-directory: terraform-scripts/kafka-clusters
        run: terraform show
